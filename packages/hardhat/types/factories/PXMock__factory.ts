/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b5061262780620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806395d89b411161010f578063b807f857116100a2578063dbddb26a11610071578063dbddb26a146103db578063e4e4dc42146103e3578063e985e9c5146103f6578063fc784d4914610432576101e5565b8063b807f8571461039a578063b88d4fde146103ad578063bcb00f29146103c0578063c87b56dd146103c8576101e5565b8063a6053eb5116100de578063a6053eb514610358578063a739d6441461036b578063b43ff0f01461037e578063b78a7d7214610387576101e5565b806395d89b411461032b57806397b874f714610333578063a035386d1461033c578063a22cb46514610345576101e5565b8063199f90a6116101875780636352211e116101565780636352211e146102dc578063690c9f43146102ef57806370a08231146102f857806379d90b171461030b576101e5565b8063199f90a61461029a57806323b872dd146102ad57806342842e0e146102c05780635d29904e146102d3576101e5565b8063081812fc116101c3578063081812fc1461023e578063095ea7b314610269578063109429901461027e57806318160ddd14610291576101e5565b806301ffc9a7146101ea578063055fa0d51461021257806306fdde0314610229575b600080fd5b6101fd6101f836600461214e565b610445565b60405190151581526020015b60405180910390f35b61021b60985481565b604051908152602001610209565b610231610499565b60405161020991906123b0565b61025161024c366004612250565b61052b565b6040516001600160a01b039091168152602001610209565b61027c610277366004612061565b6105c5565b005b61027c61028c36600461208a565b6106db565b61021b60995481565b61027c6102a8366004612186565b610783565b61027c6102bb366004611f77565b6108c1565b61027c6102ce366004611f77565b6108f2565b61021b60a05481565b6102516102ea366004612250565b61090d565b61021b609f5481565b61021b610306366004611f2b565b610984565b61031e610319366004612250565b610a0b565b604051610209919061237f565b610231610a5a565b61021b609e5481565b61021b609c5481565b61027c61035336600461202b565b610a69565b61027c610366366004612250565b610a78565b61027c610379366004612186565b610c9d565b61021b609d5481565b609754610251906001600160a01b031681565b61027c6103a8366004612250565b609c55565b61027c6103bb366004611fb2565b610d20565b61021b610d58565b6102316103d6366004612250565b610e63565b610231610f73565b61021b6103f1366004612250565b611001565b6101fd610404366004611f45565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61027c610440366004612268565b611011565b60006001600160e01b031982166380ac58cd60e01b148061047657506001600160e01b03198216635b5e139f60e01b145b8061049157506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b6060606580546104a890612521565b80601f01602080910402602001604051908101604052809291908181526020018280546104d490612521565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105a95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105d08261090d565b9050806001600160a01b0316836001600160a01b0316141561063e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105a0565b336001600160a01b038216148061065a575061065a8133610404565b6106cc5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105a0565b6106d68383611031565b505050565b600081511161071c5760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016105a0565b60005b81518110156107685761075882828151811061074b57634e487b7160e01b600052603260045260246000fd5b602002602001015161109f565b6107618161255c565b905061071f565b50610780609c54825161077b91906124bf565b6111bd565b50565b600054610100900460ff168061079c575060005460ff16155b6107b85760405162461bcd60e51b81526004016105a0906123c3565b600054610100900460ff161580156107da576000805461ffff19166101011790555b6107e489896113d3565b6001600160a01b0387166107f757600080fd5b609780546001600160a01b0319166001600160a01b038916179055690bb28f98c1e0715ce000609c55620f4240609d556000609e55609f85905560a084905561084084866124bf565b60995560a054609f5461085391906124bf565b60985585516108699060a1906020890190611ddf565b5060a280546001600160a01b038086166001600160a01b03199283161790925560a3805492851692909116919091179055602860a455603c60a55580156108b6576000805461ff00191690555b505050505050505050565b6108cb338261145a565b6108e75760405162461bcd60e51b81526004016105a090612411565b6106d683838361154d565b6106d683838360405180602001604052806000815250610d20565b6000818152606760205260408120546001600160a01b0316806104915760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105a0565b60006001600160a01b0382166109ef5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105a0565b506001600160a01b031660009081526068602052604090205490565b610a13611e63565b6000609d5483610a2391906124de565b90506040518060400160405280609f5483610a3e9190612577565b8152602001609f5483610a5191906124ab565b90529392505050565b6060606680546104a890612521565b610a743383836116ed565b5050565b60008111610ac05760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016105a0565b609854811115610b095760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105a0565b60005b81811015610bf4576000610b216098546117bc565b609d54610b2e9190612493565b609e546000828152609a60205260409020549192501415610b5b576000818152609a602052604090208190555b60006001609854609d54610b6f9190612493565b610b7991906124de565b609e546000828152609a60205260409020549192501415610ba6576000818152609a602052604090208190555b6000828152609a602090815260408083208054858552828520805490925590819055808452609b909252909120829055610be033826117d1565b50505080610bed9061255c565b9050610b0c565b506097546001600160a01b03166323b872dd3330609c5485610c1691906124bf565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610c6557600080fd5b505af1158015610c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190612132565b600054610100900460ff1680610cb6575060005460ff16155b610cd25760405162461bcd60e51b81526004016105a0906123c3565b600054610100900460ff16158015610cf4576000805461ffff19166101011790555b610d048989898989898989610783565b80156108b6576000805461ff0019169055505050505050505050565b610d2a338361145a565b610d465760405162461bcd60e51b81526004016105a090612411565b610d52848484846117f7565b50505050565b6000806098544342610d673390565b604051602001610d8f919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528051906020012060001c610db291906124ab565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610df791906124ab565b610e014442612493565b610e0b9190612493565b610e159190612493565b610e1f9190612493565b610e299190612493565b610e339190612493565b604051602001610e4591815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610ee25760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105a0565b6000610eec611875565b90506000611388609d5485610f0191906124de565b610f0b91906124ab565b610f16906001612493565b90506000825111610f365760405180602001604052806000815250610f6b565b81610f4082611884565b610f4986611884565b604051602001610f5b939291906122b5565b6040516020818303038152906040525b949350505050565b60a18054610f8090612521565b80601f0160208091040260200160405190810160405280929190818152602001828054610fac90612521565b8015610ff95780601f10610fce57610100808354040283529160200191610ff9565b820191906000526020600020905b815481529060010190602001808311610fdc57829003601f168201915b505050505081565b6000609d548261049191906124de565b600061101d82846124bf565b609881905560995550609f9190915560a055565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110668261090d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b609e548114156110e35760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105a0565b336110ed8261090d565b6001600160a01b0316146111395760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105a0565b6000818152609b6020526040812054609854609d5491929161115b9190612493565b6000818152609a602081815260408084208054898652609b8452828620879055808652828620899055888652939092528320829055838352869055609880549394509092600192906111ae908490612493565b90915550610d5290508461199f565b600060648060a454846111d091906124bf565b6111da91906124ab565b6111e491906124ab565b9050600060648060a554856111f991906124bf565b61120391906124ab565b61120d91906124ab565b905060008161121c84866124de565b61122691906124de565b60975460a25460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052929350169063a9059cbb90604401602060405180830381600087803b15801561127857600080fd5b505af115801561128c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b09190612132565b5060975460a35460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561130157600080fd5b505af1158015611315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113399190612132565b506097546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561139457600080fd5b505af11580156113a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cc9190612132565b5050505050565b600054610100900460ff16806113ec575060005460ff16155b6114085760405162461bcd60e51b81526004016105a0906123c3565b600054610100900460ff1615801561142a576000805461ffff19166101011790555b611432611a3a565b61143a611a3a565b6114448383611aa5565b80156106d6576000805461ff0019169055505050565b6000818152606760205260408120546001600160a01b03166114d35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105a0565b60006114de8361090d565b9050806001600160a01b0316846001600160a01b031614806115195750836001600160a01b031661150e8461052b565b6001600160a01b0316145b80610f6b57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610f6b565b826001600160a01b03166115608261090d565b6001600160a01b0316146115c85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105a0565b6001600160a01b03821661162a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105a0565b611635600082611031565b6001600160a01b038316600090815260686020526040812080546001929061165e9084906124de565b90915550506001600160a01b038216600090815260686020526040812080546001929061168c908490612493565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316141561174f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105a0565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000816117c7610d58565b6104919190612577565b6117db8282611b3a565b6001609860008282546117ee91906124de565b90915550505050565b61180284848461154d565b61180e84848484611c7c565b610d525760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105a0565b606060a180546104a890612521565b6060816118a957506040805180820190915260018152600360fc1b6020820152610494565b8160005b81156118d357806118bd8161255c565b91506118cc9050600a836124ab565b91506118ad565b60008167ffffffffffffffff8111156118fc57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611926576020820181803683370190505b5090505b8415610f6b5761193b6001836124de565b9150611948600a86612577565b611953906030612493565b60f81b81838151811061197657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611998600a866124ab565b945061192a565b60006119aa8261090d565b90506119b7600083611031565b6001600160a01b03811660009081526068602052604081208054600192906119e09084906124de565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611a53575060005460ff16155b611a6f5760405162461bcd60e51b81526004016105a0906123c3565b600054610100900460ff16158015611a91576000805461ffff19166101011790555b8015610780576000805461ff001916905550565b600054610100900460ff1680611abe575060005460ff16155b611ada5760405162461bcd60e51b81526004016105a0906123c3565b600054610100900460ff16158015611afc576000805461ffff19166101011790555b8251611b0f906065906020860190611ddf565b508151611b23906066906020850190611ddf565b5080156106d6576000805461ff0019169055505050565b6001600160a01b038216611b905760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105a0565b6000818152606760205260409020546001600160a01b031615611bf55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105a0565b6001600160a01b0382166000908152606860205260408120805460019290611c1e908490612493565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611dd457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611cc0903390899088908890600401612342565b602060405180830381600087803b158015611cda57600080fd5b505af1925050508015611d0a575060408051601f3d908101601f19168201909252611d079181019061216a565b60015b611dba573d808015611d38576040519150601f19603f3d011682016040523d82523d6000602084013e611d3d565b606091505b508051611db25760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105a0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f6b565b506001949350505050565b828054611deb90612521565b90600052602060002090601f016020900481019282611e0d5760008555611e53565b82601f10611e2657805160ff1916838001178555611e53565b82800160010185558215611e53579182015b82811115611e53578251825591602001919060010190611e38565b50611e5f929150611e81565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611e5f5760008155600101611e82565b600067ffffffffffffffff831115611eb057611eb06125b7565b611ec3601f8401601f1916602001612462565b9050828152838383011115611ed757600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461049457600080fd5b600082601f830112611f15578081fd5b611f2483833560208501611e96565b9392505050565b600060208284031215611f3c578081fd5b611f2482611eee565b60008060408385031215611f57578081fd5b611f6083611eee565b9150611f6e60208401611eee565b90509250929050565b600080600060608486031215611f8b578081fd5b611f9484611eee565b9250611fa260208501611eee565b9150604084013590509250925092565b60008060008060808587031215611fc7578081fd5b611fd085611eee565b9350611fde60208601611eee565b925060408501359150606085013567ffffffffffffffff811115612000578182fd5b8501601f81018713612010578182fd5b61201f87823560208401611e96565b91505092959194509250565b6000806040838503121561203d578182fd5b61204683611eee565b91506020830135612056816125cd565b809150509250929050565b60008060408385031215612073578182fd5b61207c83611eee565b946020939093013593505050565b6000602080838503121561209c578182fd5b823567ffffffffffffffff808211156120b3578384fd5b818501915085601f8301126120c6578384fd5b8135818111156120d8576120d86125b7565b8060051b91506120e9848301612462565b8181528481019084860184860187018a1015612103578788fd5b8795505b83861015612125578035835260019590950194918601918601612107565b5098975050505050505050565b600060208284031215612143578081fd5b8151611f24816125cd565b60006020828403121561215f578081fd5b8135611f24816125db565b60006020828403121561217b578081fd5b8151611f24816125db565b600080600080600080600080610100898b0312156121a2578384fd5b883567ffffffffffffffff808211156121b9578586fd5b6121c58c838d01611f05565b995060208b01359150808211156121da578586fd5b6121e68c838d01611f05565b98506121f460408c01611eee565b975060608b0135915080821115612209578586fd5b506122168b828c01611f05565b9550506080890135935060a0890135925061223360c08a01611eee565b915061224160e08a01611eee565b90509295985092959890939650565b600060208284031215612261578081fd5b5035919050565b6000806040838503121561227a578182fd5b50508035926020909101359150565b600081518084526122a18160208601602086016124f5565b601f01601f19169290920160200192915050565b600084516122c78184602089016124f5565b6a0dacae8c2c8c2e8c25ae6d60ab1b90830190815284516122ef81600b8401602089016124f5565b602f60f81b600b9290910191820152686d657461646174612d60b81b600c82015283516123238160158401602088016124f5565b64173539b7b760d91b60159290910191820152601a0195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061237590830184612289565b9695505050505050565b60408101818360005b60028110156123a7578151835260209283019290910190600101612388565b50505092915050565b600060208252611f246020830184612289565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561248b5761248b6125b7565b604052919050565b600082198211156124a6576124a661258b565b500190565b6000826124ba576124ba6125a1565b500490565b60008160001904831182151516156124d9576124d961258b565b500290565b6000828210156124f0576124f061258b565b500390565b60005b838110156125105781810151838201526020016124f8565b83811115610d525750506000910152565b600181811c9082168061253557607f821691505b6020821081141561255657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156125705761257061258b565b5060010190565b600082612586576125866125a1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461078057600080fd5b6001600160e01b03198116811461078057600080fdfea26469706673582212202ef8f7d3487aee594a14b502a61dd1264a550092e35713854951e35310bc7b6864736f6c63430008030033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
