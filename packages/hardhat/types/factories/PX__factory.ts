/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PX, PXInterface } from "../PX";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b5061250980620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806379d90b17116100f9578063b78a7d7211610097578063c87b56dd11610071578063c87b56dd14610381578063dbddb26a14610394578063e4e4dc421461039c578063e985e9c5146103af576101c4565b8063b78a7d7214610353578063b88d4fde14610366578063bcb00f2914610379576101c4565b8063a035386d116100d3578063a035386d1461031b578063a22cb46514610324578063a6053eb514610337578063b43ff0f01461034a576101c4565b806379d90b17146102ea57806395d89b411461030a57806397b874f714610312576101c4565b8063199f90a6116101665780635d29904e116101405780635d29904e146102b25780636352211e146102bb578063690c9f43146102ce57806370a08231146102d7576101c4565b8063199f90a61461027957806323b872dd1461028c57806342842e0e1461029f576101c4565b8063081812fc116101a2578063081812fc1461021d578063095ea7b314610248578063109429901461025d57806318160ddd14610270576101c4565b806301ffc9a7146101c9578063055fa0d5146101f157806306fdde0314610208575b600080fd5b6101dc6101d7366004612051565b6103eb565b60405190151581526020015b60405180910390f35b6101fa60985481565b6040519081526020016101e8565b61021061043f565b6040516101e89190612292565b61023061022b366004612153565b6104d1565b6040516001600160a01b0390911681526020016101e8565b61025b610256366004611f64565b61056b565b005b61025b61026b366004611f8d565b610681565b6101fa60995481565b61025b610287366004612089565b610729565b61025b61029a366004611e7a565b610867565b61025b6102ad366004611e7a565b610898565b6101fa60a05481565b6102306102c9366004612153565b6108b3565b6101fa609f5481565b6101fa6102e5366004611e2e565b61092a565b6102fd6102f8366004612153565b6109b1565b6040516101e89190612261565b610210610a00565b6101fa609e5481565b6101fa609c5481565b61025b610332366004611f2e565b610a0f565b61025b610345366004612153565b610a1e565b6101fa609d5481565b609754610230906001600160a01b031681565b61025b610374366004611eb5565b610c43565b6101fa610c7b565b61021061038f366004612153565b610d86565b610210610e96565b6101fa6103aa366004612153565b610f24565b6101dc6103bd366004611e48565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061041c57506001600160e01b03198216635b5e139f60e01b145b8061043757506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b60606065805461044e90612403565b80601f016020809104026020016040519081016040528092919081815260200182805461047a90612403565b80156104c75780601f1061049c576101008083540402835291602001916104c7565b820191906000526020600020905b8154815290600101906020018083116104aa57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b031661054f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b6000610576826108b3565b9050806001600160a01b0316836001600160a01b031614156105e45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610546565b336001600160a01b0382161480610600575061060081336103bd565b6106725760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610546565b61067c8383610f34565b505050565b60008151116106c25760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b6044820152606401610546565b60005b815181101561070e576106fe8282815181106106f157634e487b7160e01b600052603260045260246000fd5b6020026020010151610fa2565b6107078161243e565b90506106c5565b50610726609c54825161072191906123a1565b6110c0565b50565b600054610100900460ff1680610742575060005460ff16155b61075e5760405162461bcd60e51b8152600401610546906122a5565b600054610100900460ff16158015610780576000805461ffff19166101011790555b61078a89896112d6565b6001600160a01b03871661079d57600080fd5b609780546001600160a01b0319166001600160a01b038916179055690bb28f98c1e0715ce000609c55620f4240609d556000609e55609f85905560a08490556107e684866123a1565b60995560a054609f546107f991906123a1565b609855855161080f9060a1906020890190611ce2565b5060a280546001600160a01b038086166001600160a01b03199283161790925560a3805492851692909116919091179055602860a455603c60a555801561085c576000805461ff00191690555b505050505050505050565b610871338261135d565b61088d5760405162461bcd60e51b8152600401610546906122f3565b61067c838383611450565b61067c83838360405180602001604052806000815250610c43565b6000818152606760205260408120546001600160a01b0316806104375760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610546565b60006001600160a01b0382166109955760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610546565b506001600160a01b031660009081526068602052604090205490565b6109b9611d66565b6000609d54836109c991906123c0565b90506040518060400160405280609f54836109e49190612459565b8152602001609f54836109f7919061238d565b90529392505050565b60606066805461044e90612403565b610a1a3383836115f0565b5050565b60008111610a665760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b6044820152606401610546565b609854811115610aaf5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b6044820152606401610546565b60005b81811015610b9a576000610ac76098546116bf565b609d54610ad49190612375565b609e546000828152609a60205260409020549192501415610b01576000818152609a602052604090208190555b60006001609854609d54610b159190612375565b610b1f91906123c0565b609e546000828152609a60205260409020549192501415610b4c576000818152609a602052604090208190555b6000828152609a602090815260408083208054858552828520805490925590819055808452609b909252909120829055610b8633826116d4565b50505080610b939061243e565b9050610ab2565b506097546001600160a01b03166323b872dd3330609c5485610bbc91906123a1565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610c0b57600080fd5b505af1158015610c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1a9190612035565b610c4d338361135d565b610c695760405162461bcd60e51b8152600401610546906122f3565b610c75848484846116fa565b50505050565b6000806098544342610c8a3390565b604051602001610cb2919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528051906020012060001c610cd5919061238d565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610d1a919061238d565b610d244442612375565b610d2e9190612375565b610d389190612375565b610d429190612375565b610d4c9190612375565b610d569190612375565b604051602001610d6891815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610e055760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610546565b6000610e0f611778565b90506000611388609d5485610e2491906123c0565b610e2e919061238d565b610e39906001612375565b90506000825111610e595760405180602001604052806000815250610e8e565b81610e6382611787565b610e6c86611787565b604051602001610e7e93929190612197565b6040516020818303038152906040525b949350505050565b60a18054610ea390612403565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecf90612403565b8015610f1c5780601f10610ef157610100808354040283529160200191610f1c565b820191906000526020600020905b815481529060010190602001808311610eff57829003601f168201915b505050505081565b6000609d548261043791906123c0565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f69826108b3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b609e54811415610fe65760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b6044820152606401610546565b33610ff0826108b3565b6001600160a01b03161461103c5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b6044820152606401610546565b6000818152609b6020526040812054609854609d5491929161105e9190612375565b6000818152609a602081815260408084208054898652609b8452828620879055808652828620899055888652939092528320829055838352869055609880549394509092600192906110b1908490612375565b90915550610c759050846118a2565b600060648060a454846110d391906123a1565b6110dd919061238d565b6110e7919061238d565b9050600060648060a554856110fc91906123a1565b611106919061238d565b611110919061238d565b905060008161111f84866123c0565b61112991906123c0565b60975460a25460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052929350169063a9059cbb90604401602060405180830381600087803b15801561117b57600080fd5b505af115801561118f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b39190612035565b5060975460a35460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561120457600080fd5b505af1158015611218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123c9190612035565b506097546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561129757600080fd5b505af11580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf9190612035565b5050505050565b600054610100900460ff16806112ef575060005460ff16155b61130b5760405162461bcd60e51b8152600401610546906122a5565b600054610100900460ff1615801561132d576000805461ffff19166101011790555b61133561193d565b61133d61193d565b61134783836119a8565b801561067c576000805461ff0019169055505050565b6000818152606760205260408120546001600160a01b03166113d65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610546565b60006113e1836108b3565b9050806001600160a01b0316846001600160a01b0316148061141c5750836001600160a01b0316611411846104d1565b6001600160a01b0316145b80610e8e57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610e8e565b826001600160a01b0316611463826108b3565b6001600160a01b0316146114cb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610546565b6001600160a01b03821661152d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610546565b611538600082610f34565b6001600160a01b03831660009081526068602052604081208054600192906115619084906123c0565b90915550506001600160a01b038216600090815260686020526040812080546001929061158f908490612375565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031614156116525760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610546565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000816116ca610c7b565b6104379190612459565b6116de8282611a3d565b6001609860008282546116f191906123c0565b90915550505050565b611705848484611450565b61171184848484611b7f565b610c755760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610546565b606060a1805461044e90612403565b6060816117ac57506040805180820190915260018152600360fc1b602082015261043a565b8160005b81156117d657806117c08161243e565b91506117cf9050600a8361238d565b91506117b0565b60008167ffffffffffffffff8111156117ff57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611829576020820181803683370190505b5090505b8415610e8e5761183e6001836123c0565b915061184b600a86612459565b611856906030612375565b60f81b81838151811061187957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061189b600a8661238d565b945061182d565b60006118ad826108b3565b90506118ba600083610f34565b6001600160a01b03811660009081526068602052604081208054600192906118e39084906123c0565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611956575060005460ff16155b6119725760405162461bcd60e51b8152600401610546906122a5565b600054610100900460ff16158015611994576000805461ffff19166101011790555b8015610726576000805461ff001916905550565b600054610100900460ff16806119c1575060005460ff16155b6119dd5760405162461bcd60e51b8152600401610546906122a5565b600054610100900460ff161580156119ff576000805461ffff19166101011790555b8251611a12906065906020860190611ce2565b508151611a26906066906020850190611ce2565b50801561067c576000805461ff0019169055505050565b6001600160a01b038216611a935760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610546565b6000818152606760205260409020546001600160a01b031615611af85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610546565b6001600160a01b0382166000908152606860205260408120805460019290611b21908490612375565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611cd757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611bc3903390899088908890600401612224565b602060405180830381600087803b158015611bdd57600080fd5b505af1925050508015611c0d575060408051601f3d908101601f19168201909252611c0a9181019061206d565b60015b611cbd573d808015611c3b576040519150601f19603f3d011682016040523d82523d6000602084013e611c40565b606091505b508051611cb55760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e74657200000000000000006064820152608401610546565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e8e565b506001949350505050565b828054611cee90612403565b90600052602060002090601f016020900481019282611d105760008555611d56565b82601f10611d2957805160ff1916838001178555611d56565b82800160010185558215611d56579182015b82811115611d56578251825591602001919060010190611d3b565b50611d62929150611d84565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611d625760008155600101611d85565b600067ffffffffffffffff831115611db357611db3612499565b611dc6601f8401601f1916602001612344565b9050828152838383011115611dda57600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461043a57600080fd5b600082601f830112611e18578081fd5b611e2783833560208501611d99565b9392505050565b600060208284031215611e3f578081fd5b611e2782611df1565b60008060408385031215611e5a578081fd5b611e6383611df1565b9150611e7160208401611df1565b90509250929050565b600080600060608486031215611e8e578081fd5b611e9784611df1565b9250611ea560208501611df1565b9150604084013590509250925092565b60008060008060808587031215611eca578081fd5b611ed385611df1565b9350611ee160208601611df1565b925060408501359150606085013567ffffffffffffffff811115611f03578182fd5b8501601f81018713611f13578182fd5b611f2287823560208401611d99565b91505092959194509250565b60008060408385031215611f40578182fd5b611f4983611df1565b91506020830135611f59816124af565b809150509250929050565b60008060408385031215611f76578182fd5b611f7f83611df1565b946020939093013593505050565b60006020808385031215611f9f578182fd5b823567ffffffffffffffff80821115611fb6578384fd5b818501915085601f830112611fc9578384fd5b813581811115611fdb57611fdb612499565b8060051b9150611fec848301612344565b8181528481019084860184860187018a1015612006578788fd5b8795505b8386101561202857803583526001959095019491860191860161200a565b5098975050505050505050565b600060208284031215612046578081fd5b8151611e27816124af565b600060208284031215612062578081fd5b8135611e27816124bd565b60006020828403121561207e578081fd5b8151611e27816124bd565b600080600080600080600080610100898b0312156120a5578384fd5b883567ffffffffffffffff808211156120bc578586fd5b6120c88c838d01611e08565b995060208b01359150808211156120dd578586fd5b6120e98c838d01611e08565b98506120f760408c01611df1565b975060608b013591508082111561210c578586fd5b506121198b828c01611e08565b9550506080890135935060a0890135925061213660c08a01611df1565b915061214460e08a01611df1565b90509295985092959890939650565b600060208284031215612164578081fd5b5035919050565b600081518084526121838160208601602086016123d7565b601f01601f19169290920160200192915050565b600084516121a98184602089016123d7565b6a0dacae8c2c8c2e8c25ae6d60ab1b90830190815284516121d181600b8401602089016123d7565b602f60f81b600b9290910191820152686d657461646174612d60b81b600c82015283516122058160158401602088016123d7565b64173539b7b760d91b60159290910191820152601a0195945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906122579083018461216b565b9695505050505050565b60408101818360005b600281101561228957815183526020928301929091019060010161226a565b50505092915050565b600060208252611e27602083018461216b565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561236d5761236d612499565b604052919050565b600082198211156123885761238861246d565b500190565b60008261239c5761239c612483565b500490565b60008160001904831182151516156123bb576123bb61246d565b500290565b6000828210156123d2576123d261246d565b500390565b60005b838110156123f25781810151838201526020016123da565b83811115610c755750506000910152565b600181811c9082168061241757607f821691505b6020821081141561243857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124525761245261246d565b5060010190565b60008261246857612468612483565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461072657600080fd5b6001600160e01b03198116811461072657600080fdfea26469706673582212202f2046e4d57c4095ebf4ff1b1007d187c418857386609d1828e90beea11683b864736f6c63430008030033";

type PXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PX__factory extends ContractFactory {
  constructor(...args: PXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PX> {
    return super.deploy(overrides || {}) as Promise<PX>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PX {
    return super.attach(address) as PX;
  }
  connect(signer: Signer): PX__factory {
    return super.connect(signer) as PX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXInterface {
    return new utils.Interface(_abi) as PXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PX {
    return new Contract(address, _abi, signerOrProvider) as PX;
  }
}
