{
  "id": "1dcdfbfd32d67d3cd2066a611e274536",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.3",
  "solcLongVersion": "0.8.3+commit.8d00100c",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/mocks/EtherReceiverMock.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract EtherReceiverMock {\n    bool private _acceptEther;\n\n    function setAcceptEther(bool acceptEther) public {\n        _acceptEther = acceptEther;\n    }\n\n    receive() external payable {\n        if (!_acceptEther) {\n            revert();\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/mocks/EtherReceiverMock.sol": {
        "EtherReceiverMock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "acceptEther",
                  "type": "bool"
                }
              ],
              "name": "setAcceptEther",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061010f806100206000396000f3fe608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160c5565b92915050565b60006020828403121560a457600080fd5b600060b0848285016080565b91505092915050565b60008115159050919050565b60cc8160b9565b811460d657600080fd5b5056fea264697066735822122030952c54456c7be6398867a5514971f1ff8bce785add6edb5d6e3fcd93d0f14064736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FEA120C EQ PUSH1 0x40 JUMPI PUSH1 0x3B JUMP JUMPDEST CALLDATASIZE PUSH1 0x3B JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x5E SWAP2 SWAP1 PUSH1 0x93 JUMP JUMPDEST PUSH1 0x64 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x8D DUP2 PUSH1 0xC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB0 DUP5 DUP3 DUP6 ADD PUSH1 0x80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xCC DUP2 PUSH1 0xB9 JUMP JUMPDEST DUP2 EQ PUSH1 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SWAP6 0x2C SLOAD GASLIMIT PUSH13 0x7BE6398867A5514971F1FF8BCE PUSH25 0x5ADD6EDB5D6E3FCD93D0F14064736F6C634300080300330000 ",
              "sourceMap": "58:260:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:623:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "56:84:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "66:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "88:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "75:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "75:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "66:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "128:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "104:23:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "104:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "104:30:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "34:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "42:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50:5:1",
                            "type": ""
                          }
                        ],
                        "src": "7:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "209:193:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "255:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "264:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "267:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "257:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "257:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "257:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "230:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "239:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "226:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "226:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "251:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "222:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "222:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "219:2:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "281:114:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "296:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "310:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "300:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "325:60:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "357:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "368:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "353:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "353:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "377:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "335:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "335:50:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "325:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "179:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "190:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "202:6:1",
                            "type": ""
                          }
                        ],
                        "src": "146:256:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "450:48:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "460:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "485:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "478:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "478:13:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "471:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "471:21:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "460:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "432:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "442:7:1",
                            "type": ""
                          }
                        ],
                        "src": "408:90:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "544:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "598:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "607:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "610:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "600:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "600:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "600:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "567:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "589:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "574:14:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "574:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "564:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "564:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "557:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "557:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "554:2:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "537:5:1",
                            "type": ""
                          }
                        ],
                        "src": "504:116:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160c5565b92915050565b60006020828403121560a457600080fd5b600060b0848285016080565b91505092915050565b60008115159050919050565b60cc8160b9565b811460d657600080fd5b5056fea264697066735822122030952c54456c7be6398867a5514971f1ff8bce785add6edb5d6e3fcd93d0f14064736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FEA120C EQ PUSH1 0x40 JUMPI PUSH1 0x3B JUMP JUMPDEST CALLDATASIZE PUSH1 0x3B JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x5E SWAP2 SWAP1 PUSH1 0x93 JUMP JUMPDEST PUSH1 0x64 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x8D DUP2 PUSH1 0xC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB0 DUP5 DUP3 DUP6 ADD PUSH1 0x80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xCC DUP2 PUSH1 0xB9 JUMP JUMPDEST DUP2 EQ PUSH1 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SWAP6 0x2C SLOAD GASLIMIT PUSH13 0x7BE6398867A5514971F1FF8BCE PUSH25 0x5ADD6EDB5D6E3FCD93D0F14064736F6C634300080300330000 ",
              "sourceMap": "58:260:0:-:0;;;;;;;;;;;;;;;;;;;;;;;263:12;;;;;;;;;;258:52;;291:8;;;258:52;58:260;;;;;123:92;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;197:11;182:12;;:26;;;;;;;;;;;;;;;;;;123:92;:::o;7:133:1:-;;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:256::-;;251:2;239:9;230:7;226:23;222:32;219:2;;;267:1;264;257:12;219:2;310:1;335:50;377:7;368:6;357:9;353:22;335:50;:::i;:::-;325:60;;281:114;209:193;;;;:::o;408:90::-;;485:5;478:13;471:21;460:32;;450:48;;;:::o;504:116::-;574:21;589:5;574:21;:::i;:::-;567:5;564:32;554:2;;610:1;607;600:12;554:2;544:76;:::o"
            },
            "methodIdentifiers": {
              "setAcceptEther(bool)": "4fea120c"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/mocks/EtherReceiverMock.sol": {
        "ast": {
          "absolutePath": "contracts/mocks/EtherReceiverMock.sol",
          "exportedSymbols": {
            "EtherReceiverMock": [
              25
            ]
          },
          "id": 26,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 25,
              "linearizedBaseContracts": [
                25
              ],
              "name": "EtherReceiverMock",
              "nameLocation": "67:17:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "_acceptEther",
                  "nameLocation": "104:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "91:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "91:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 12,
                    "nodeType": "Block",
                    "src": "172:43:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 8,
                            "name": "_acceptEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "182:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9,
                            "name": "acceptEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "197:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "182:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11,
                        "nodeType": "ExpressionStatement",
                        "src": "182:26:0"
                      }
                    ]
                  },
                  "functionSelector": "4fea120c",
                  "id": 13,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setAcceptEther",
                  "nameLocation": "132:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "acceptEther",
                        "nameLocation": "152:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "147:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "147:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "146:18:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "172:0:0"
                  },
                  "scope": 25,
                  "src": "123:92:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 23,
                    "nodeType": "Block",
                    "src": "248:68:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "262:13:0",
                          "subExpression": {
                            "id": 16,
                            "name": "_acceptEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "263:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 22,
                        "nodeType": "IfStatement",
                        "src": "258:52:0",
                        "trueBody": {
                          "id": 21,
                          "nodeType": "Block",
                          "src": "277:33:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 18,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "291:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 19,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "291:8:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20,
                              "nodeType": "ExpressionStatement",
                              "src": "291:8:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 24,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "228:2:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "248:0:0"
                  },
                  "scope": 25,
                  "src": "221:95:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 26,
              "src": "58:260:0"
            }
          ],
          "src": "33:286:0"
        },
        "id": 0
      }
    }
  }
}
